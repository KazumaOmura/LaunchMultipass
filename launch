# helpオプション
function usage {
    cat <<EOM
Usage: $(basename "$0") [OPTION] [INSTANCE NAME]
  -h           Display help
  [INSTANCE NAME]           指定した名前でインスタンス作成
EOM

    exit 2
}

# サービス名の入力を受け取りインスタンスを作成
ask_service_name() {
    while true; do
        echo "$*"
        read SERVICE_NAME
        if [ -z "$SERVICE_NAME" ]; then
            echo "NOT SERVICE_NAME"
        else
            MULTIPASS_INFO_VALUE=$(multipass info $SERVICE_NAME | grep IPv4)
            
            # インスタンスが存在しない場合
            if [[ -z "$MULTIPASS_INFO_VALUE" ]]; then
                if ask_yes_or_no "「"$SERVICE_NAME"」でインスタンスを作成しますか？"; then
                    make_instance
                else 
                    exit 1
                fi
            # インスタンスが既に存在する場合
            else
                if ask_yes_or_no "「"$SERVICE_NAME"」インスタンスを削除して再度作成しますか？"; then

                    echo "--> 「"$SERVICE_NAME"」インスタンス削除"
                    delete_instance $SERVICE_NAME
                        
                    make_instance
                else 
                    exit 1
                fi
            fi
            exit 1
        fi
    done
}

# multipass起動
launch_instance() {
    multipass launch 20.04 -n $1 --cloud-init cloud-config.yml
}

# multipass削除
delete_instance() {
    multipass delete $1
    multipass purge
}

# known_hosts 削除
remove_know_hosts_ip(){
    sed -i '' "/"$1"/d" ~/.ssh/known_hosts 
}

# etc/hosts 削除
function remove_etc_hosts_ip(){
    sudo sed -i '' "/"$1"/d" /etc/hosts
}

# multipassインスタンスのipアドレスを正規表現で取得
get_ip_address() {
    MULTIPASS_INFO=$(multipass info $1 | grep IPv4)
    IP_ADDRESS=$(echo $MULTIPASS_INFO | sed -e "s/^.\{6\}//")
    echo $IP_ADDRESS
}

# hostsファイルのlocal ipアドレスを変更
rewrite_hosts() {
    : >./hosts
    echo \[local\] >>./hosts
    echo $1 >>./hosts
}

# Ansible Playbook実行
run_ansible() {
    ansible-playbook -i hosts -u ubuntu main.yml
}

# multipass mount設置
run_mount() {
    multipass mount ../CMS $1:/var/www/$1/cms
    multipass mount ../APP $1:/var/www/$1/app
}

# /etc/hosts 書き換え
add_etc_hosts_ip() {
    sudo chmod 777 /etc/hosts
    echo >>/etc/hosts
    echo \#\# ansible-$1-start >>/etc/hosts
    echo $2 $1-local.com >>/etc/hosts
    echo $2 cms.$1-local.com >>/etc/hosts
    echo \#\# ansible-$1-end >>/etc/hosts
    echo >>/etc/hosts
    sudo chmod 755 /etc/hosts
}

# vars 変更
rewrite_vars() {
    : >./vars/main.yml
    echo \#\# >>./vars/main.yml
    echo project_name: $1 >>./vars/main.yml
    echo mysql_user: youcast >>./vars/main.yml
    echo mysql_password: youcast >>./vars/main.yml
    echo mysql_database: $1_db >>./vars/main.yml
    echo root_dir: /var/www/$1 >>./vars/main.yml
    echo \#\# >>./vars/main.yml
}

# ask yes or n
function ask_yes_or_no {
    while true; do
        echo "$* [y/n]: "
        read ANS2
        case $ANS2 in
        [Yy]*)
            return 0
            ;;
        [Nn]*)
            return 1
            ;;
        *)
            echo "yまたはnを入力してください"
            ;;
        esac
    done
}

# インスタンス作成 一連コマンド
function make_instance(){
    echo "--- 「"$SERVICE_NAME"」インスタンス作成 ---"
    launch_instance $SERVICE_NAME
    echo "----------------------------------------"

    IP_ADDRESS=$(get_ip_address $SERVICE_NAME)
    echo "--> インスタンス:"$SERVICE_NAME"のIPアドレス:"$IP_ADDRESS""

    echo "--> know_hosts 指定IP行削除"
    remove_know_hosts_ip $IP_ADDRESS

    echo "--> etc/hosts 指定IP行削除"
    remove_etc_hosts_ip $IP_ADDRESS

    echo "--> etc/hosts追記"
    add_etc_hosts_ip $SERVICE_NAME $IP_ADDRESS

    echo "--> ansible | hosts書き換え"
    rewrite_hosts $IP_ADDRESS

    echo "--> vars project_name 変更"
    rewrite_vars $SERVICE_NAME

    echo "--- Ansible実行 ---"
    run_ansible
    echo "----------------------------------------"

    echo "--- mount設置 ---"
    run_mount $SERVICE_NAME
    echo "----------------------------------------"
}

# 引数別の処理定義
while getopts ":h" optKey; do
    case "$optKey" in
    '-h' | '--help' | *)
        usage
    esac
done

ask_service_name "任意のサービス名を入力してください >"